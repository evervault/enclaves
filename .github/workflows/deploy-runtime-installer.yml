name: "Build and deploy runtime installer bundle"
on:
  workflow_call:
    inputs:
      stage:
        required: true
        default: 'staging'
        type: string
      version:
        required: true
        type: string 
    secrets:    
      aws-cloudfront-distribution-id:
        required: true
      aws-access-key-id:
        required: true
      aws-secret-access-key: 
        required: true

jobs:
  build-runtime-bundle:
    runs-on: ubuntu-latest
    outputs:
      checksum: ${{ steps.compute-checksum.outputs.checksum }}
    steps:
      - uses: actions/checkout@v3
      - name: Build bundle using local action
        uses: ./installer
      - name: Upload bundle as artifact
        uses: actions/upload-artifact@v3
        with:
          name: runtime-dependencies-${{github.sha}}.zip
          path: ./output/runtime-dependencies.tar.gz
      - name: Compute bundle checksum
        id: compute-checksum
        run: |
          CHECKSUM=$(shasum -a 256 ./output/runtime-dependencies.tar.gz | cut -d" " -f1)
          echo "checksum=$CHECKSUM" >> "$GITHUB_OUTPUT"

  upload-runtime-bundle:
    runs-on: ubuntu-latest
    needs: [build-runtime-bundle]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: runtime-dependencies-${{github.sha}}.zip
      - name: Configure Production AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws-access-key-id }}
          aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
          aws-region: us-east-1
      - name: Upload installer bundle to S3
        env:
          CHECKSUM: ${{ needs.build-runtime-bundle.outputs.checksum }}
        run: |
          aws s3 cp ./runtime-dependencies.tar.gz s3://cage-build-assets-${{ inputs.stage }}/installer/${{ env.CHECKSUM }}.tar.gz

  release-runtime-bundle:
    runs-on: ubuntu-latest
    needs: [build-runtime-bundle, upload-runtime-bundle]
    steps:
      - uses: actions/checkout@v4
      - name: Configure Production AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws-access-key-id }}
          aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
          aws-region: us-east-1
      - name: Update latest record for installer
        env:
          CHECKSUM: ${{ needs.build-runtime-bundle.outputs.checksum }}
        run: |
          echo "${{ env.CHECKSUM }}" > latest.txt
          aws s3 cp ./latest.txt s3://cage-build-assets-${{ inputs.stage }}/installer/latest
          sh ./scripts/update-installer-version.sh ${{ inputs.version  }} ${{ env.CHECKSUM }} ${{ inputs.stage }}
          aws s3 cp scripts/versions s3://cage-build-assets-${{ inputs.stage }}/runtime/versions
       
      - name: Cloudfront Cache Invalidation
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.aws-cloudfront-distribution-id }} --paths "/runtime/versions"    
