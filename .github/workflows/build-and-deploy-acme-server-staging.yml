name: "Build and deploy acme server"
on:
  push:
    branches:
      - main
    paths:
      - acme-server/**
env:
  LINUX_TARGET: x86_64-unknown-linux-musl

jobs:
  last_test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "standard-cache"
      - name: Test acme-server
        run: cargo test -p acme-server
  compile-and-push-acme-server-image:
    runs-on: ubuntu-latest
    needs: last_test
    steps:
      - uses: actions/checkout@v2
      - uses: Swatinem/rust-cache@v2
      - name: Build Acme Server
        uses: evervault/cargo-static-build@master
        with:
          cmd: cargo build -p acme-server --release --target ${{ env.LINUX_TARGET }}
      - name: Move acme-server binary to root
        run: cp ./target/${{ env.LINUX_TARGET }}/release/acme-server ./acme-server
      - name: Configure Staging AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_STAGING }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_STAGING }}
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_STS_STAGING_ROLE_ARN }}
          role-duration-seconds: 1200
          role-skip-session-tagging: true
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, and tag
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: evervault/acme-server
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -f ./acme-server/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest  --pull --no-cache .
      - name: Push acme-server image to Amazon ECR
        id: push-acme-server
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: evervault/acme-server
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
