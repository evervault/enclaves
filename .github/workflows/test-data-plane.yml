on:
  push:
    paths:
      - data-plane/**
      - shared/**
      - .github/workflows/test-data-plane.yml
      - Cargo.lock
name: Test Data Plane
jobs:
  check_data_plane:
    strategy:
      matrix:
        feature-flags:
          [
            "tls_termination,enclave",
            "tls_termination,not_enclave",
            "enclave",
            "not_enclave",
            "tls_termination,enclave,network_egress",
            "tls_termination,not_enclave,network_egress",
            "enclave,network_egress",
            "not_enclave,network_egress",
          ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install MUSL Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools
      - uses: dtolnay/rust-toolchain@1.79.0
        with:
          targets: x86_64-unknown-linux-musl
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "standard-cache"
      - name: Compile project with features ${{ matrix.feature-flags }}
        run: cargo check -p data-plane --no-default-features --features ${{ matrix.feature-flags }}

  test_data_plane:
    needs: [check_data_plane]
    strategy:
      matrix:
        feature-flags:
          [
            "not_enclave",
            "not_enclave,network_egress",
            "not_enclave,tls_termination",
            "not_enclave,tls_termination,network_egress",
          ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install MUSL Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools
      - uses: dtolnay/rust-toolchain@1.79.0
        with:
          targets: x86_64-unknown-linux-musl
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "standard-cache"
      - name: Test project with features ${{ matrix.feature-flags }}
        run: cargo test -p data-plane --no-default-features --features ${{ matrix.feature-flags }}
      - name: Test project with features ${{ matrix.feature-flags }} using staging flag
        run: cargo test -p data-plane --no-default-features --features ${{ matrix.feature-flags }}
        env:
          RUSTFLAGS: "--cfg staging"
